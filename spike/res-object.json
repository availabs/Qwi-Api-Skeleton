
{ _readableState: 
   { objectMode: false,
     highWaterMark: 16384,
     buffer: [],
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: true,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: true,
     readableListening: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: true,
  domain: null,
  _events: {},
  _maxListeners: undefined,
  socket: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 17,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _host: null,
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Function: socketOnError],
        close: [Object],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     bytesRead: 551,
     _bytesDispatched: 0,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _connectionKey: '4:null:1337' },
     _idleTimeout: 120000,
     _idleNext: { _idleNext: [Circular], _idlePrev: [Circular] },
     _idlePrev: { _idleNext: [Circular], _idlePrev: [Circular] },
     _idleStart: 1824217,
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: [Object],
        writeHead: [Function: writeHead],
        end: [Function: end],
        jsonx: [Function: jsonx],
        badRequest: [Function: bound],
        forbidden: [Function: bound],
        notFound: [Function: bound],
        ok: [Function: bound],
        serverError: [Function: bound],
        created: [Function: bound],
        negotiate: [Function: bound],
        __: [Function],
        __n: [Function],
        getLocale: [Function],
        setLocale: [Function],
        getCatalog: [Function],
        locale: 'en',
        i18n: [Function],
        guessView: [Function],
        view: [Function] },
     _peername: { address: '::ffff:127.0.0.1', family: 'IPv6', port: 52689 } },
  connection: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 17,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _host: null,
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Function: socketOnError],
        close: [Object],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     bytesRead: 551,
     _bytesDispatched: 0,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _connectionKey: '4:null:1337' },
     _idleTimeout: 120000,
     _idleNext: { _idleNext: [Circular], _idlePrev: [Circular] },
     _idlePrev: { _idleNext: [Circular], _idlePrev: [Circular] },
     _idleStart: 1824217,
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: [Object],
        writeHead: [Function: writeHead],
        end: [Function: end],
        jsonx: [Function: jsonx],
        badRequest: [Function: bound],
        forbidden: [Function: bound],
        notFound: [Function: bound],
        ok: [Function: bound],
        serverError: [Function: bound],
        created: [Function: bound],
        negotiate: [Function: bound],
        __: [Function],
        __n: [Function],
        getLocale: [Function],
        setLocale: [Function],
        getCatalog: [Function],
        locale: 'en',
        i18n: [Function],
        guessView: [Function],
        view: [Function] },
     _peername: { address: '::ffff:127.0.0.1', family: 'IPv6', port: 52689 } },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'localhost:1337',
     connection: 'keep-alive',
     'cache-control': 'max-age=0',
     accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
     'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/41.0.2272.76 Chrome/41.0.2272.76 Safari/537.36',
     dnt: '1',
     'accept-encoding': 'gzip, deflate, sdch',
     'accept-language': 'en-US,en;q=0.8',
     cookie: 'sails.sid=s%3AG5KewqPzkNpjA3oEHZoG-7TlgT5DdpTG.Akk3iGXeFn6FiTgEi9o44y1rzriFNTuTC6xa3mGq7fQ',
     'if-none-match': 'W/"5831-1711075991"' },
  rawHeaders: 
   [ 'Host',
     'localhost:1337',
     'Connection',
     'keep-alive',
     'Cache-Control',
     'max-age=0',
     'Accept',
     'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
     'User-Agent',
     'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/41.0.2272.76 Chrome/41.0.2272.76 Safari/537.36',
     'DNT',
     '1',
     'Accept-Encoding',
     'gzip, deflate, sdch',
     'Accept-Language',
     'en-US,en;q=0.8',
     'Cookie',
     'sails.sid=s%3AG5KewqPzkNpjA3oEHZoG-7TlgT5DdpTG.Akk3iGXeFn6FiTgEi9o44y1rzriFNTuTC6xa3mGq7fQ',
     'If-None-Match',
     'W/"5831-1711075991"' ],
  trailers: {},
  rawTrailers: [],
  _pendings: [],
  _pendingIndex: 0,
  upgrade: false,
  url: '/employment/test',
  method: 'GET',
  statusCode: null,
  statusMessage: null,
  client: 
   { _connecting: false,
     _hadError: false,
     _handle: 
      { fd: 17,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _host: null,
     _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Function: socketOnError],
        close: [Object],
        data: [Function: socketOnData] },
     _maxListeners: undefined,
     _writableState: 
      { objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     bytesRead: 551,
     _bytesDispatched: 0,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _connectionKey: '4:null:1337' },
     _idleTimeout: 120000,
     _idleNext: { _idleNext: [Circular], _idlePrev: [Circular] },
     _idlePrev: { _idleNext: [Circular], _idlePrev: [Circular] },
     _idleStart: 1824217,
     parser: 
      { '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: [Object],
        writeHead: [Function: writeHead],
        end: [Function: end],
        jsonx: [Function: jsonx],
        badRequest: [Function: bound],
        forbidden: [Function: bound],
        notFound: [Function: bound],
        ok: [Function: bound],
        serverError: [Function: bound],
        created: [Function: bound],
        negotiate: [Function: bound],
        __: [Function],
        __n: [Function],
        getLocale: [Function],
        setLocale: [Function],
        getCatalog: [Function],
        locale: 'en',
        i18n: [Function],
        guessView: [Function],
        view: [Function] },
     _peername: { address: '::ffff:127.0.0.1', family: 'IPv6', port: 52689 } },
  _consuming: false,
  _dumped: false,
  originalUrl: '/employment/test',
  _parsedUrl: 
   { protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/employment/test',
     path: '/employment/test',
     href: '/employment/test',
     _raw: '/employment/test' },
  query: {},
  res: 
   { domain: null,
     _events: { prefinish: [Function: resOnFinish] },
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedHeader: {},
     _hasBody: true,
     _trailer: '',
     finished: false,
     _hangupClose: false,
     _headerSent: false,
     socket: 
      { _connecting: false,
        _hadError: false,
        _handle: [Object],
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        bytesRead: 551,
        _bytesDispatched: 0,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 1824217,
        parser: [Object],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular],
        _peername: [Object] },
     connection: 
      { _connecting: false,
        _hadError: false,
        _handle: [Object],
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        bytesRead: 551,
        _bytesDispatched: 0,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 1824217,
        parser: [Object],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular],
        _peername: [Object] },
     _header: null,
     _headers: 
      { 'x-powered-by': 'Sails <sailsjs.org>',
        'access-control-allow-origin': '',
        'access-control-allow-credentials': '',
        'access-control-allow-methods': '',
        'access-control-allow-headers': '' },
     _headerNames: 
      { 'x-powered-by': 'X-Powered-By',
        'access-control-allow-origin': 'Access-Control-Allow-Origin',
        'access-control-allow-credentials': 'Access-Control-Allow-Credentials',
        'access-control-allow-methods': 'Access-Control-Allow-Methods',
        'access-control-allow-headers': 'Access-Control-Allow-Headers' },
     req: [Circular],
     locals: 
      { [Function: locals]
        _: [Object],
        util: [Object],
        session: [Object],
        req: [Circular],
        res: [Circular],
        sails: 
         
           |>   [a lifted Sails app on port 1337]
         \___/  For help, see: http://links.sailsjs.org/docs
         
         Tip: Use `sails.config` to access your app's runtime configuration.
         
         1 Models:
         ApiSkeleton
         
         2 Controllers:
         ApiSkeletonController,EmploymentController
         
         20 Hooks:
         moduleloader,logger,request,orm,views,blueprints,responses,controllers,sockets,pubsub,policies,services,csrf,cors,i18n,userconfig,session,grunt,http,userhooks
         ,
        title: undefined,
        __: [Function],
        __n: [Function],
        getLocale: [Function],
        setLocale: [Function],
        getCatalog: [Function],
        locale: 'en',
        i18n: [Function],
        _csrf: null },
     writeHead: [Function: writeHead],
     end: [Function: end],
     jsonx: [Function: jsonx],
     badRequest: [Function: bound],
     forbidden: [Function: bound],
     notFound: [Function: bound],
     ok: [Function: bound],
     serverError: [Function: bound],
     created: [Function: bound],
     negotiate: [Function: bound],
     __: [Function],
     __n: [Function],
     getLocale: [Function],
     setLocale: [Function],
     getCatalog: [Function],
     locale: 'en',
     i18n: [Function],
     guessView: [Function],
     view: [Function] },
  next: [Function: next],
  _startTime: Fri May 22 2015 13:20:26 GMT-0400 (EDT),
  secret: '85a4f35025c4a71f091c1797c2f57830',
  cookies: {},
  signedCookies: { 'sails.sid': 'G5KewqPzkNpjA3oEHZoG-7TlgT5DdpTG' },
  _parsedOriginalUrl: 
   { protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/employment/test',
     path: '/employment/test',
     href: '/employment/test',
     _raw: '/employment/test' },
  sessionStore: 
   { sessions: {},
     generate: [Function],
     _events: { disconnect: [Object], connect: [Object] } },
  sessionID: 'Rml21u4-7Q4ozjQkf7gKaHWTXqxV-3eR',
  session: 
   { cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true } },
  file: [Function],
  originalMethod: 'GET',
  _route_index: 8,
  route: 
   { path: '/employment/test',
     method: 'get',
     callbacks: [ [Function: routeTargetFnWrapper] ],
     keys: [],
     regexp: /^\/employment\/test\/?$/i,
     params: [] },
  params: [],
  options: 
   { detectedVerb: 
      { verb: '',
        original: '/employment/test',
        path: '/employment/test' },
     skipRegex: [],
     _middlewareType: 'CORS HOOK: clearHeaders',
     controller: 'employment',
     action: 'test' },
  allParams: [Function],
  flash: [Function: _flash],
  _sails: 
   
     |>   [a lifted Sails app on port 1337]
   \___/  For help, see: http://links.sailsjs.org/docs
   
   Tip: Use `sails.config` to access your app's runtime configuration.
   
   1 Models:
   ApiSkeleton
   
   2 Controllers:
   ApiSkeletonController,EmploymentController
   
   20 Hooks:
   moduleloader,logger,request,orm,views,blueprints,responses,controllers,sockets,pubsub,policies,services,csrf,cors,i18n,userconfig,session,grunt,http,userhooks
   ,
  port: 1337,
  baseUrl: 'http://localhost:1337',
  validate: [Function: _validate],
  explicitlyAcceptsHTML: true,
  wantsJSON: undefined,
  _modifiedRouteParams: [],
  languages: [ 'en', 'en' ],
  regions: [ 'us' ],
  language: 'en',
  region: 'us',
  locale: 'en',
  __: [Function],
  __n: [Function],
  getLocale: [Function],
  setLocale: [Function],
  getCatalog: [Function] }
